--- a/webkit/common/user_agent/user_agent_util.cc
+++ b/webkit/common/user_agent/user_agent_util.cc
@@ -177,16 +177,25 @@ std::string BuildUserAgentFromProduct(co
 
 std::string BuildUserAgentFromOSAndProduct(const std::string& os_info,
                                            const std::string& product) {
+
+
+  // We want to also add Chromium
+  std::string realproduct = product.c_str();
+  size_t pos;
+  if ((pos = realproduct.find("/")) != std::string::npos)
+      realproduct.replace(0, pos, "Chromium");
+
   // Derived from Safari's UA string.
   // This is done to expose our product name in a manner that is maximally
   // compatible with Safari, we hope!!
   std::string user_agent;
   base::StringAppendF(
       &user_agent,
-      "Mozilla/5.0 (%s) AppleWebKit/%d.%d (KHTML, like Gecko) %s Safari/%d.%d",
+      "Mozilla/5.0 (%s) AppleWebKit/%d.%d (KHTML, like Gecko) OpenMandriva %s %s Safari/%d.%d",
       os_info.c_str(),
       WEBKIT_VERSION_MAJOR,
       WEBKIT_VERSION_MINOR,
+      realproduct.c_str(),
       product.c_str(),
       WEBKIT_VERSION_MAJOR,
       WEBKIT_VERSION_MINOR);
